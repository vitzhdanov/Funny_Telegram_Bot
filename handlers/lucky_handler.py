from aiogram import types
from aiogram.dispatcher import filters
from loader import dp
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.utils.callback_data import CallbackData

lst_user = []

SAVE_WORD = ['–±–æ—Ç', '–ø–æ–∏—Å–∫']


@dp.message_handler(filters.Text(contains=SAVE_WORD))
async def test(message: types.Message):
    text = message.text.replace('–±–æ—Ç –ø–æ–∏—Å–∫ ', '').replace(' ', '+')
    google_callback = CallbackData('choose', 'req')
    google_key = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='üîç', callback_data=google_callback.new(req='req'), url=f'https://www.google.com/search?q={text}')
        ]
    ])
    await message.answer(text='ü•∏', reply_markup=google_key)


@dp.message_handler(text='/lucky')
async def luck(message: types.Message):
    await message.delete()
    mes = await dp.bot.send_dice(chat_id=message.chat.id)
    # –¥–æ–±–∞–≤–ª—è—é —é–∑–µ—Ä–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ
    if message.from_user.id not in [user['id'] for user in lst_user]:
        lst_user.append(
            {
                'id': message.from_user.id,
                'name': message.from_user.first_name or message.from_user.username,
                'value': mes['dice']['value']
            }
        )
    print(message.chat.id)
    if len(lst_user) > 1:
        c = [i for i in lst_user if i['value'] == max([i['value'] for i in lst_user])]
        if len(c) == 1:
            await message.answer(f"{''.join([i['name'] for i in c])} –æ–±—ã–≥—Ä–∞–ª –∏ —É–Ω–∏—á—Ç–æ–∂–∏–ª")
            lst_user.clear()
        elif len(c) > 1:
            await message.answer(f"–ü–æ–±–µ–¥–∏–ª–∞ –¥—Ä—É–∂–±–∞ {' –∏ '.join([i['name'] for i in c])}")
            lst_user.clear()


@dp.edited_message_handler()
async def mes(message: types.Message):
    await message.reply('–ë—É–¥—å—Ç–µ –Ω–∞ —á–µ–∫—É, —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ...')
